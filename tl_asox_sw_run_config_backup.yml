---
# Ansible playbook to backup running configurations from Aruba AOS-CX switches
# Features:
# - Determines correct VRF for TFTP transfer (mgmt or default)
# - Creates timestamped backup files
# - Validates TFTP server reachability
# - Sends email notification with results
# - Comprehensive error handling

- name: Initialize and gather required facts
  hosts: localhost
  vars:
    tftp_server: "10.70.128.32"
    tftp_directory: "running_config"
    email_notification: "cjones@timberlinkaustralia.com.au"
    backup_retention_days: 30  # For future cleanup tasks
  
  tasks:
    - name: Get ansible date/time facts
      setup:
        filter: "ansible_date_time"
        gather_subset: "!all"
      tags: always

    - name: Store DTG as fact
      set_fact:
        DTG: "{{ ansible_date_time.date }}"
      tags: always

- name: Check HTTPS Server VRF Configuration
  hosts: all
  gather_facts: false
  collections:
    - arubanetworks.aoscx
  vars:
    ansible_connection: network_cli
    ansible_network_os: arubanetworks.aoscx.aoscx
    ansible_python_interpreter: /usr/bin/python3
  
  tasks:
    - name: Check for HTTPS server configuration
      aoscx_command:
        commands: "show running-config | include https-server"
      register: https_config
      changed_when: false
      ignore_errors: yes

    - name: Determine VRF configuration
      set_fact:
        target_vrf: >-
          {% if 'https-server vrf mgmt' in https_config.stdout[0] %}
          mgmt
          {% else %}
          default
          {% endif %}

    - name: Validate VRF determination
      ansible.builtin.assert:
        that:
          - target_vrf in [' mgmt ', ' default ']
        fail_msg: "Failed to determine correct VRF for TFTP transfer"
      tags: always

- name: Backup running config
  hosts: all
  gather_facts: false
  collections:
    - arubanetworks.aoscx
  vars:
    ansible_connection: arubanetworks.aoscx.aoscx
    ansible_network_os: arubanetworks.aoscx.aoscx
    ansible_python_interpreter: /usr/bin/python3
    tftp_server: "10.70.128.32"
    tftp_directory: "running_config"
    email_notification: "cjones@timberlinkaustralia.com.au"
    backup_retention_days: 30  # For future cleanup tasks
  
  tasks:
    - name: Create backup filename
      set_fact:
        backup_filename: "{{ inventory_hostname }}_{{ DTG }}_runconfig.cli"

    - name: Backup running config
      aoscx_backup_config:
        config_name: 'running-config'
        remote_output_file_tftp_path: 'tftp://{{ tftp_server }}/{{ tftp_directory }}/{{ backup_filename }}'
        config_type: 'cli'
        vrf: "{{ target_vrf | trim }}"
      register: backup_result
      retries: 3
      delay: 10
      until: backup_result is succeeded
      notify: Send backup status email

    - name: Validate backup file creation
      ansible.builtin.assert:
        that:
          - backup_result is changed
        fail_msg: "Failed to create backup file on TFTP server"
        success_msg: "Backup file {{ backup_filename }} created successfully"
      tags: always

  handlers:
    - name: Send backup status email
      community.general.mail:
        host: "smtp.timberlinkaustralia.com.au"
        port: 25
        to: "{{ email_notification }}"
        subject: "Backup Status for {{ inventory_hostname }}"
        body: |-
          Backup operation completed with status: {{ backup_result is succeeded | ternary('SUCCESS', 'FAILURE') }}
          
          Details:
          - Device: {{ inventory_hostname }}
          - Backup File: {{ backup_filename }}
          - VRF Used: {{ target_vrf }}
          - TFTP Server: {{ tftp_server }}
          - Timestamp: {{ ansible_date_time.iso8601 }}
          
          {% if backup_result is failed %}
          Error: {{ backup_result.msg }}
          {% endif %}
      delegate_to: localhost
      when: backup_result is defined

- name: Cleanup old backups (placeholder task)
  hosts: localhost
  tasks:
    - name: Future task to cleanup old backups
      ansible.builtin.debug:
        msg: "Future task would delete backups older than {{ backup_retention_days }} days here"
      tags: cleanup